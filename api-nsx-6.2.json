{
  "swagger": "2.0",
  "info": {
    "title": "VMware NSX for vSphere",
    "version": "6.2",
    "contact": {
      "name": "Grant Orchard",
      "email": "gorchard@vmware.com",
      "url": "grantorchard.com"
    }
  },
  "host": "platypus_host",
  "basePath": "/",
  "schemes": ["https"],
  "securityDefinitions": {},
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/2.0/vdn/switches/datacenter/{datacenterID}": {
      "get": {
        "description": "Lists all VDS's in a specified vSphere Datacenter Object",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_vdsListInDc_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenterID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A valid Datacenter Id (e.g. datacenter-4)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/switches/{vdsId}": {
      "get": {
        "description": "Retrieve a specific vds by specific switchId (e.g. dvs-26)",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_vdsShow_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vdsId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A valid switch (VDS) Id (e.g. dvs-26)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete a specific vds by specific switchId (e.g. dvs-26)",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_vdsDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vdsId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A valid switch (VDS) Id (e.g. dvs-26)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/switches": {
      "get": {
        "description": "Lists all vds's",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_vdsList_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "prepares a pre-configured vds with teaming and MTU options, MTU must be 1600 or higher",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_vdsPrepare_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/config/segments/{segmentPoolId}": {
      "get": {
        "description": "Retrieve details of an individual segment ID Pool",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_vdnSegmentPoolShow_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "segmentPoolId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A valid segment Pool Id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Update an individual segment ID Pool\n\n**Request Body:**\n\n&lt;segmentRange&gt;\n\n&nbsp;&lt;end&gt;3000&lt;/end&gt;\n\n&nbsp;&lt;name&gt;&lt;/name&gt;\n\n&nbsp;&lt;desc&gt;&lt;/desc&gt;\n\n&lt;/segmentRang&gt;",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_vdnSegmentPoolChange_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "segmentPoolId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A valid segment Pool Id"
          },
          {
            "name": "body",
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete an individual segment ID Pool",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_vdnSegmentPoolDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "segmentPoolId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A valid segment Pool Id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/config/segments": {
      "get": {
        "description": "Lists all Segment ID Pools",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_vdnSegmentPoolList_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Add a segment ID Pool\n\n**Request Body:**\n\n&lt;segmentRange&gt;\n\n&nbsp;&lt;name&gt;name&lt;/name&gt; &lt;!-- Required --&gt;\n\n&nbsp;&lt;desc&gt;description&lt;/desc&gt; &lt;!-- Optional --&gt;\n\n&nbsp;&lt;begin&gt;5000&lt;/begin&gt; &lt;!-- Required. Minimum value is 5000 --&gt;\n\n&nbsp;&lt;end&gt;65535&lt;/end&gt; &lt;!-- Required. Maximum value is 16777216--&gt;\n\n&lt;/segmentRange&gt;",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_vdnSegmentPoolAdd_",
        "produces": [
          "application/xml"
        ],
        "consumes": [ "application/xml" ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/config/multicasts/{multicastAddresssRangeId}": {
      "get": {
        "description": "Retrieve details of an individual Multicast range Pool",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_vdnMulticastPoolShow_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "multicastAddresssRangeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A valid multicast Pool range Id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Update an individual Multicast range Pool\n\n**Request Body:**\n\n&lt;segmentRange&gt;\n\n&nbsp;&lt;end&gt;3000&lt;/end&gt;\n\n&nbsp;&lt;name&gt;&lt;/name&gt;\n\n&nbsp;&lt;desc&gt;&lt;/desc&gt;\n\n&lt;/segmentRang&gt;",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_vdnMulticastPoolChange_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "multicastAddresssRangeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A valid multicast Pool range Id"
          },
          {
            "name": "body",
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete an individual Multicast range Pool",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_vdnSegmentPoolDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "multicastAddresssRangeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A valid multicast Pool range Id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/config/multicasts": {
      "get": {
        "description": "List all configured vdn Multicast Pools",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_vdnMulticastPoolList_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Adds a multicast range for logical switches\n\n**Request Body:**\n\n&lt;multicastRange&gt;\n\n&nbsp;&lt;name&gt;name&lt;/name&gt;\n\n&nbsp;&lt;desc&gt;description&lt;/desc&gt;\n\n&nbsp;&lt;begin&gt;239.1.1.1&lt;/begin&gt;\n\n&nbsp;&lt;end&gt;239.3.3.3&lt;/end&gt;\n\n&lt;/multicastRange&gt;",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_vdnMulticastPoolAdd_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/config/vxlan/udp/port/{portNumber}": {
      "put": {
        "description": "Updates the UDP Port used for VXLAN",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_vdnConfigUDPUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "portNumber",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A valid UDP Port for VXLAN"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/config/vxlan/udp/port": {
      "get": {
        "description": "View configured UDP port for VXLAN",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_vdnConfigUDPShow_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/config/resources/allocated": {
      "get": {
        "description": "Retrieve a list of resources allocated",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_allocatedResourcesRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "type",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "set to \"segmentId\" or \"multicastAddress\""
          },
          {
            "name": "pagesize",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Optional; limits the maximum number of entries returned. Valid range is 1-1024, default is 256"
          },
          {
            "name": "startindex",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Optional; specifies the starting point for retrieval. If not specified, resources are retrieved from the beginning"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/scopes/{scopeId}/attributes": {
      "put": {
        "description": "update the attributes of a transport zone (e.g. Name, description)",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_vdnScopeAttribUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A valid scope Id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/scopes/{scopeId}/conn-check/multicast": {
      "post": {
        "description": "Test multicast group connectivity in a transport zone",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_vdnScopeConnCheck_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A valid scope Id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/scopes/{scopeId}": {
      "get": {
        "description": "Retrieve the properties of an existing network scope",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_vdnScopeProperties_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A valid scope Id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Updates a transport zone, you can add a cluster to or delete a cluster from a transport zone",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_vdnScopeChange_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Mandatory queryParameter, use 'expand' to add a cluster, or 'shrink' to remove a cluster from the TZ"
          },
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A valid scope Id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "delete a transport zone",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_vdnScopeDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A valid scope Id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/scopes": {
      "get": {
        "description": "Retrieve a list of all known VDN Scopes",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_vdnScopesList_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Create a new Transport Zone. Note that you can only add one initial cluster when creating the TZ.",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_vdnScopeCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/scopes/{scopeId}/virtualwires": {
      "get": {
        "description": "Lists all logical Switches in the Transport Zone (Scope)",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_logicalSwitchList_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A valid scope Id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "creates a logicalSwitch",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_logicalSwitchCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A valid scope Id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/virtualwires/vm/vnic": {
      "get": {
        "description": "Migrate a Virtual Maschine vnic to a logical switch",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_logicalSwitchVmAttach_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/virtualwires/{virtualWireID}/conn-check/multicast": {
      "post": {
        "description": "Test multicast group connectivity in logical switch",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_logicalSwitchConnCheck_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "virtualWireID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A logical switch id, e.g. virtualwire-1002"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/virtualwires/{virtualWireID}/conn-check/p2p": {
      "post": {
        "description": "Perform point to point connectivity test between two hosts across which a logical switch spans",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_logicalSwitchPing_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "virtualWireID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A logical switch id, e.g. virtualwire-1002"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/virtualwires/{virtualWireID}": {
      "get": {
        "description": "Retrieves the configuration of an individual logical switch",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_logicalSwitchShow_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "virtualWireID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A logical switch id, e.g. virtualwire-1002"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Update a logical switch, possible updates are name changes & Controlplane Mode",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_logicalSwitchUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "virtualWireID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A logical switch id, e.g. virtualwire-1002"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete a logical switch",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_logicalSwitchDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "virtualWireID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "A logical switch id, e.g. virtualwire-1002"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/virtualwires": {
      "get": {
        "description": "List all logicalSwitches",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_logicalSwitchesRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "optional; specify starting point for retrieving logical switches"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "optional; limit the max number of entries returned. Valid range is 1-1024"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/xvs/networks/{ID}/features": {
      "get": {
        "description": "Query ARP suppression and MAC learning information",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_arpMACRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "dvpg MoID or virtual wire ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Enable or disable ARP suppression and MAC learning",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_arpMAC_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "dvpg MoID or virtual wire ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/controller/upgrade-available": {
      "get": {
        "description": "Query controller upgrade availability",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_nsxControllerUpgradeAvailability_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/controller/progress/{jobId}": {
      "get": {
        "description": "Retrieve status of controller creation or removal. Returns percentage indication of job progress",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_nsxControllerJobRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified job Id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/controller/{controllerId}/techsupportlogs": {
      "get": {
        "description": "Retrieve controller logs",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_nsxControllerLogsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "controllerId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified controller"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/controller/{controllerId}/syslog": {
      "get": {
        "description": "Retrieve details about the syslog exporter on the controller",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_nsxControllerSyslogRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "controllerId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified controller"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Add controller syslog exporter on the controller",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_nsxControllerSyslogCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "controllerId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified controller"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete the syslog exporter",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_nsxControllerSyslogDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "controllerId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified controller"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/controller/{controllerId}/snapshot": {
      "get": {
        "description": "Take a snapshot of the control cluster from the specified controller node",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_nsxControllerSnapshot_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "controllerId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified controller"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/controller/{controllerId}": {
      "delete": {
        "description": "Delete NSX controller. When deleting last controller from cluster, forceRemoval must be set to true",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_nsxControllerDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "forceRemoval",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "boolean",
            "description": "Force removal of controller (true/false)"
          },
          {
            "name": "controllerId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified controller"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/controller/cluster": {
      "get": {
        "description": "Retrieve cluster-wise configuration information for controller",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_nsxControllerClusterRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify cluster configuration information for controller",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_nsxControllerClusterUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/controller/credential": {
      "put": {
        "description": "Change the NSX controller password",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_nsxControllerPasswordUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/vdn/controller": {
      "get": {
        "description": "Retrieve details and runtime status for all controllers",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_nsxControllersRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Add a new controller on a specified cluster. Request without body to upgrade controller cluster",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_nsxControllerCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/application/scope/{scopeId}": {
      "get": {
        "description": "List services that have been created on the scope",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_servicesScopeRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Can be globalroot-0 or datacenterId in upgrade use cases."
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Create a new service on the specified scope",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_servicesScopeCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Can be globalroot-0 or datacenterId in upgrade use cases."
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/application/{applicationId}": {
      "get": {
        "description": "Retrieve details about the specified service",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_serviceRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified as returned by a servicesScope POST call"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify the name, description, applicationProtocol, or port value of a service",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_serviceUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified as returned by a servicesScope POST call"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete the specified service",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_serviceDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "boolean",
            "description": "Indicates if the delete should be forced or unforced. The default is unforced (false)"
          },
          {
            "name": "applicationId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified as returned by a servicesScope POST call"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/applicationgroup/{scopeId}": {
      "get": {
        "description": "Retrieve a list of service groups that have been created on the scope",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_serviceGroupsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "globalroot-0 or datacenterId in upgrade use cases"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Create a new service group on the specified scope",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_serviceGroupsCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "globalroot-0 or datacenterId in upgrade use cases"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/applicationgroup/{applicationgroupId}/members/{moref}": {
      "put": {
        "description": "Add a member to the service group",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_serviceGroupMembersCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationgroupId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Application group ID"
          },
          {
            "name": "moref",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Management object reference to the member"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete a member from the service group",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_serviceGroupMembersDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationgroupId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Application group ID"
          },
          {
            "name": "moref",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Management object reference to the member"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/applicationgroup/{applicationgroupId}": {
      "get": {
        "description": "Retrieve details about a service group",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_serviceGroupRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationgroupId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Application group ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify the name, description, applicationProtocol, or port value of a service group",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_serviceGroupUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "applicationgroupId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Application group ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete a service group from a scope",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_serviceGroupDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "boolean",
            "description": "Indicates if the delete should be forced or unforced. The default is unforced (false)"
          },
          {
            "name": "applicationgroupId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Application group ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/applicationgroup/scope/{scopeId}/members": {
      "get": {
        "description": "Get a list of member elements that can be added to the service groups created on a particular scope.",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_serviceGroupMembersRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "globalroot-0 or datacenterId in upgrade use cases"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/ipam/pools/scope/{scopeId}": {
      "get": {
        "description": "Read all IP Pools in a scope",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_ipPoolRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "globalroot-0 or datacenterId in upgrade use cases"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Create a pool of IP addresses",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_ipPoolCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "globalroot-0 or datacenterId in upgrade use cases"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/ipam/pools/{poolId}/ipaddresses/{ipAddress}": {
      "delete": {
        "description": "Release an IP Address allocation in the Pool",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_ipAddressRelease_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified IP pool"
          },
          {
            "name": "ipAddress",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The Id of the ip address to release, e.g. '192.168.10.10'"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/ipam/pools/{poolId}/ipaddresses": {
      "get": {
        "description": "Retrieve all IP's and their allocation status in an IP Pool",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_ipPoolIpsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified IP pool"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Allocate an IP Address from the pool. Use 'ALLOCATE' in the 'allocationMode' field in the body to allocate the next available ip. To allocate a specific one use 'RESERVE' and pass the IP to reserve in the 'ipAddress' fiels in the body",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_ipPoolAllocateIp_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified IP pool"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/ipam/pools/{poolId}": {
      "get": {
        "description": "Retrieve details about the IP pool",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_ipPoolRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified IP pool"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify an IP pool",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_ipPoolUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified IP pool"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete an IP pool",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_ipPoolDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "poolId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified IP pool"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/securitytags/tag/{tagId}/vm/{vmMoid}": {
      "put": {
        "description": "Apply a security tag to virtual machine",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_securityTagVMAttach_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified security tag"
          },
          {
            "name": "vmMoid",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "ID of VM"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Detach a security tag from a virtual machine",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_securityTagVMDetach_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified security tag"
          },
          {
            "name": "vmMoid",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "ID of VM"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/securitytags/tag/{tagId}/vm": {
      "get": {
        "description": "Retrieve the list of vm's that have the specified tag attached to them",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_securityTagVMsList_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified security tag"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/securitytags/tag/{tagId}": {
      "delete": {
        "description": "Delete the specified security tag",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_securityTagDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "tagId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified security tag"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/securitytags/tag": {
      "get": {
        "description": "Retrieve security tags",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_securityTagRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Create a new security tag",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_securityTagCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/ssoconfig/status": {
      "get": {
        "description": "Query the SSO configuration status of NSX Manager",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_ssoStatusRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/ssoconfig": {
      "get": {
        "description": "Query SSO Details",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_ssoConfigRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Register NSX Manager to SSO Services",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_ssoConfigSet_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Deletes the NSX Manager SSO Configuration",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_ssoConfigDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/usermgmt/user/{userId}": {
      "get": {
        "description": "Get information about a user",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_userMgmtUserRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "user ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Remove the NSX role for a vCenter user",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_userMgmtUserDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "user ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/usermgmt/role/{userId}": {
      "get": {
        "description": "Retrieve a user's role (possible roles are super_user, vshield_admin, enterprise_admin, security_admin, and audit)",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_userMgmtRoleRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "user to retrieve role information from"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Change a user's role",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_userMgmtRoleUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "user to retrieve role information from"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Add role and resources for a user",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_userMgmtRoleCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "isGroup",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "boolean",
            "description": "Set to \"true\" to apply to a group; set to \"false\" to apply to an individual user"
          },
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "user to retrieve role information from"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete the role assignment for specified vCenter user. Once this role is deleted, the user is removed from NSX Manager. You cannot delete the role for a local user.",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_userMgmtRoleDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "user to retrieve role information from"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/usermgmt/enablestate/{value}": {
      "put": {
        "description": "Enable or disable a user account",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_userMgmtStateUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "value",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "integer",
            "format": "int64",
            "description": "value can be 0 to disable, or 1 to enable"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/usermgmt/users/vsm": {
      "get": {
        "description": "Get information about users who have been assigned a NSX Manager role (local users as well as vCenter users with NSX Manager role)",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_userNSXManagerInfoRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/usermgmt/roles": {
      "get": {
        "description": "Read all possible roles in NSX Manager",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_userMgmtRoleRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/usermgmt/scopingobjects": {
      "get": {
        "description": "Retrieve a list of objects that can be used to define a user's access scope",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_userScopingObjectsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/securitygroup/bulk/{scopeId}": {
      "post": {
        "description": "Create a new security group on a global scope",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_secGroupCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "In the current version the scopeId will always be globalroot-0"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/securitygroup/bulk/{objectId}": {
      "put": {
        "description": "Update a specific security group",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_secGroupUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Security group to modify"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/securitygroup/scope/{scopeId}/memberTypes": {
      "get": {
        "description": "Retrieve a list of valid elements that can be added to a security group.",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_secGroupScopeMembersRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "scopeId can be globalroot-0 or datacenterID/portgroupID in upgrade use cases"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/securitygroup/scope/{scopeId}/members/{memberType}": {
      "get": {
        "description": "Retrieve members of a specific type under a scope",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_secGroupScopeMemberTypeRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "scopeId can be globalroot-0 or datacenterID/portgroupID in upgrade use cases"
          },
          {
            "name": "memberType",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specific member type"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/securitygroup/scope/{scopeId}": {
      "get": {
        "description": "List all the security groups created on a specific scope",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_secGroupScopeRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "scopeId can be globalroot-0 or datacenterID/portgroupID in upgrade use cases"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/securitygroup/{objectId}/members/{memberMoref}": {
      "put": {
        "description": "Add a new member to specified security group",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_secGroupMemberUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified security group"
          },
          {
            "name": "memberMoref",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Security group member"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete member from specified security group",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_secGroupMemberDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified security group"
          },
          {
            "name": "memberMoref",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Security group member"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/securitygroup/{objectId}/translation/virtualmachines": {
      "get": {
        "description": "Retrieve list of VmNode entities that belong to a specific security group.",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_secGroupVMNodesRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified security group"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/securitygroup/{objectId}/translation/ipaddresses": {
      "get": {
        "description": "Retrieve list of IpNode entities that belong to a specific security group.",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_secGroupIPNodesRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified security group"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/securitygroup/{objectId}/translation/macaddresses": {
      "get": {
        "description": "Retrieve list of MacNode entities that belong to a specific security group.",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_secGroupMacNodesRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified security group"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/securitygroup/{objectId}/translation/vnics": {
      "get": {
        "description": "Retrieve list of VnicNode entities that belong to a specific security group.",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_secGroupVnicNodesRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified security group"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/securitygroup/{objectId}": {
      "get": {
        "description": "Retrieve all members of the specified security group",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_secGroupObjectRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified security group"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete an existing security group",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_secGroupObjectDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "boolean"
          },
          {
            "name": "objectId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified security group"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/securitygroup/lookup/virtualmachine/{virtualMachineId}": {
      "get": {
        "description": "Retrieve list of security groups that the specified virtual machine belongs to.",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_secGroupLookupVMRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "virtualMachineId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified virtual machine"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/securitygroup/internal/scope/{scopeId}": {
      "get": {
        "description": "Retrieve all internal security groups on the NSX Manager. These are used internally by the system and should not be created or modified by end users.",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_secGroupInternalRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified transport zone (scope)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/ipset/scope/{scopeMoref}": {
      "get": {
        "description": "Retrieve all configured IPSets",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_ipsetList_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeMoref",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "In the current version this scope-ref will always be globalroot-0"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/ipset/{scopeMoref}": {
      "post": {
        "description": "creates a new IPset",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_ipsetCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeMoref",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "In the current version this scope-ref will always be globalroot-0"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/ipset/{ipsetId}": {
      "get": {
        "description": "Retrieve an individual IPset",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_ipsetRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ipsetId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The IPset to be queried or changed"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify an existing IPset",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_ipsetUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ipsetId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The IPset to be queried or changed"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "delete an IPset",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_ipsetDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ipsetId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The IPset to be queried or changed"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/vcconfig/status": {
      "get": {
        "description": "Get default vCenter Server connection status",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_vCenterStatusRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/vcconfig": {
      "get": {
        "description": "Get vCenter Server configuration details on NSX Manager",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_vCenterConfigRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Synchronize NSX Manager with vCenter server",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_vCenterConfigUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/global/info": {
      "get": {
        "description": "Retrieve global information containing version information as well as current logged in user",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_globalInfoRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/summary/system": {
      "get": {
        "description": "Retrieve system summary info such as address, dns name, version, CPU, memory and storage",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_summaryInfoRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/summary/components": {
      "get": {
        "description": "Retrieve summary of all available components and their status info",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_componentInfoRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/system/restart": {
      "post": {
        "description": "Reboot the appliance manager",
        "tags": [
          "1.0"
        ],
        "operationId": "Create_systemReboot_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/system/cpuinfo": {
      "get": {
        "description": "Query CPU information",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_systemCPUInfo_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/system/uptime": {
      "get": {
        "description": "Query appliance manager uptime",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_systemUptime_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/system/meminfo": {
      "get": {
        "description": "Query memory",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_systemMemoryInfo_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/system/storageinfo": {
      "get": {
        "description": "Query storage",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_systemStorageInfo_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/system/network/dns": {
      "put": {
        "description": "Configure DNS",
        "tags": [
          "1.0"
        ],
        "operationId": "Update_dnsUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete DNS servers",
        "tags": [
          "1.0"
        ],
        "operationId": "Delete_dnsDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/system/network": {
      "get": {
        "description": "Retrieve network information i.e. host name, IP address, DNS settings",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_networkSettingsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/system/timesettings/ntp": {
      "delete": {
        "description": "Delete NTP server",
        "tags": [
          "1.0"
        ],
        "operationId": "Delete_ntpDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/system/timesettings": {
      "get": {
        "description": "Retrieve time settings",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_systemTimeRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure time or specify the NTP server to use for time synchronization",
        "tags": [
          "1.0"
        ],
        "operationId": "Update_systemTimeUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/system/locale": {
      "get": {
        "description": "Retrieve locale info",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_systemLocaleRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure locale",
        "tags": [
          "1.0"
        ],
        "operationId": "Update_systemLocaleUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/system/syslogserver": {
      "get": {
        "description": "Retrieve syslog servers",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_systemSyslogServerRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure syslog servers",
        "tags": [
          "1.0"
        ],
        "operationId": "Update_systemSyslogServerUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete syslog servers",
        "tags": [
          "1.0"
        ],
        "operationId": "Delete_systemSyslogServerDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/components/{componentID}/dependencies": {
      "get": {
        "description": "Retrieve dependency details for specified component",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_componentDependenciesRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "componentID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified component ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/components/{componentID}/dependents": {
      "get": {
        "description": "Retrieve dependents for the specified component",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_componentDependentsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "componentID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified component ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/components/{componentID}/status": {
      "get": {
        "description": "Retrieve current status for specified component",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_componentStatusRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "componentID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified component ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/components/{componentID}": {
      "get": {
        "description": "Retrieve details for specified component",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_componentManagementRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "componentID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified component ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/components": {
      "get": {
        "description": "Retrieve all Appliance Manager components",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_componentsManagementRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/backuprestore/backupsettings": {
      "get": {
        "description": "Retrieve backup settings",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_applianceMgrBackupSettingsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure backup on the Appliance Manager",
        "tags": [
          "1.0"
        ],
        "operationId": "Update_applianceMgrBackupSettingsUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete Appliance Manager backup configuration",
        "tags": [
          "1.0"
        ],
        "operationId": "Delete_applianceMgrBackupSettingsDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/backuprestore/backup": {
      "post": {
        "description": "Backup NSX data on-demand",
        "tags": [
          "1.0"
        ],
        "operationId": "Create_applianceMgrBackup_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/backuprestore/backups": {
      "get": {
        "description": "Retrieve list of all backups available at configured backup location",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_applianceMgrBackupsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/backuprestore/restore": {
      "post": {
        "description": "Restore data from a backup file",
        "tags": [
          "1.0"
        ],
        "operationId": "Create_applianceMgrBackupRestore_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "restoreFile",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "file name of restore file"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/techsupportlogs/{componentID}": {
      "post": {
        "description": "Generate tech support logs",
        "tags": [
          "1.0"
        ],
        "operationId": "Create_techLogsCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "componentID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified component to generate tech support logs"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/techsupportlogs/{filename}": {
      "get": {
        "description": "Download tech support logs",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_techLogsDownload_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "filename",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Name of log file to download"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/notifications/{ID}/acknowledge": {
      "post": {
        "description": "Acknowledge a notification",
        "tags": [
          "1.0"
        ],
        "operationId": "Create_notificationsAcknowledge_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Notification ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/notifications": {
      "get": {
        "description": "Retrieve all system generated notifications",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_notificationsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete all notifications",
        "tags": [
          "1.0"
        ],
        "operationId": "Delete_notificationsDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/upgrade/uploadbundle/{componentID}": {
      "get": {
        "description": "Query upgrade details (after uploading upgrade bundle)",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_upgradeBundleDetails_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "componentID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Component ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Upload upgrade bundle",
        "tags": [
          "1.0"
        ],
        "operationId": "Create_upgradeBundleUpload_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "componentID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Component ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/upgrade/start/{componentID}": {
      "get": {
        "description": "Start upgrade process",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_upgradeStart_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "componentID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Component ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/appliance-management/status/{componentID}": {
      "get": {
        "description": "Query upgrade status",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_upgradeStatus_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "componentID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Component ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/systemevent": {
      "get": {
        "description": "Get NSX Manager system events",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_systemEventsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "optional; specify starting point for retrieving the logs"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "optional; limit the max number of entries returned. Valid range is 1-1024"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/auditlog": {
      "get": {
        "description": "Get NSX Manager audit logs",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_auditLogsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "optional; specify starting point for retrieving the logs"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "optional; limit the max number of entries returned. Valid range is 1-1024"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/nwfabric/configure": {
      "put": {
        "description": "Upgrade network virtualization components",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_nwfabricConfigUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Install network virtualization components\n",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_nwfabricConfigCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "If used, set to \"synchronize\" to reset communication between NSX Manager and a host/cluster"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete network virtualization components",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_nwfabricConfigDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/nwfabric/features": {
      "get": {
        "description": "Retrieves all features available on the cluster",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_nwfabricFeatures_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/nwfabric/status/child/{parentResourceID}": {
      "get": {
        "description": "Retrieve status",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_childStatusRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "parentResourceID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Parent resource ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/nwfabric/status/alleligible/{resourceType}": {
      "get": {
        "description": "Query status of resources by criterion",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_statusResourceTypeRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resourceType",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Valid resource type"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/nwfabric/status": {
      "get": {
        "description": "Retrieves the Status of Resources",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_nwfabricStatus_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "resource",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "This is a valid vCenter MOID, e.g. domain-c34 for a cluster"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/si/deploy/service/{serviceID}/dependsOn": {
      "get": {
        "description": "Identify service on which the specified service depends on",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_serviceDependencyRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "serviceID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified service"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/si/deploy/service/{serviceID}": {
      "get": {
        "description": "Retrieve all clusters on which the service is installed",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_serviceRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "serviceID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified service"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Uninstall specified service from specified clusters",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_serviceDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clusters",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Comma-separated list of cluster id's that service needs to be uninstalled from"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Time for uninstall to be scheduled. If not specified, uninstall immediately"
          },
          {
            "name": "serviceID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified service"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/si/deploy/cluster/{clusterID}/service/{serviceID}": {
      "get": {
        "description": "Retrieve detailed information about the service",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_serviceDetailsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clusterID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Cluster ID"
          },
          {
            "name": "serviceID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Service ID on cluster"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/si/deploy/cluster/{clusterID}": {
      "get": {
        "description": "Retrieve all services deployed along with their status",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_serviceRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "clusterID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Cluster ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Uninstall a service. Fails if you try to remove a service that another service depends on",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_serviceDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "services",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Comma-separated list of service id's to specify which services to uninstall"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "time for uninstall to be scheduled. If not specified, do immediately"
          },
          {
            "name": "clusterID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Cluster ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/si/deploy": {
      "put": {
        "description": "Upgrade service to recent version",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_serviceUpgrade_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "optional; specify time to start upgrade"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Deploy security fabric",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_securityFabricCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Time to start deployment task. If not specified, deploy immediately"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/regulation": {
      "get": {
        "description": "Retrieve the list of available regulations for a policy.",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_dlpRegulationRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/policy/regulations": {
      "put": {
        "description": "Enable one or more regulations by putting the regulation IDs into the policy. You can get the IDs from the output of the dlpRegulation GET call",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_dlpEnableRegulation_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/classificationvalue": {
      "get": {
        "description": "Get all classification values",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_dlpClassificationValueRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/policy/classificationvalues": {
      "put": {
        "description": "Configure a customized regex as a classification value",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_dlpRegexClassificationValue_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/excludableareas": {
      "get": {
        "description": "Retrieve list of datacenters, clusters, and resource pools that are excludable from policy inspection",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_dlpExcludableAreas_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/policy/excludedareas": {
      "put": {
        "description": "(DEPRECATED; use PUT /2.0/dlp/policy/excludedsecuritygroups instead) Exclude areas from policy inspection",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_dlpExcludeArea_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/policy/includedsecuritygroups": {
      "get": {
        "description": "Retrieve security groups that have been included in data security scans",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_dlpIncludeSecGroupRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Include security groups in data security scan",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_dlpIncludeSecGroupUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/policy/excludedsecuritygroups": {
      "get": {
        "description": "Retrieve security groups that have been excluded from data security scans",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_dlpExcludeSecGroupRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Exclude security groups in data security scan",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_dlpExcludeSecGroupUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/policy/FileFilters": {
      "put": {
        "description": "Configure file filters for scanning",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_dlpFileFiltersUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/policy/saved": {
      "get": {
        "description": "Get saved policy",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_dlpPolicySave_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/policy/published": {
      "get": {
        "description": "Retrieve currently published policy",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_dlpPolicyPublished_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/policy/publish": {
      "put": {
        "description": "Publish the updated policy",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_dlpPolicyPublish_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/scanop": {
      "put": {
        "description": "Start, pause, resume, or stop a data security scan",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_dlpScanning_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/scanstatus": {
      "get": {
        "description": "Retrieve the status of a scan operation",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_dlpScanStatus_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/scan/current/vms/{ID}": {
      "get": {
        "description": "Retrieve information about the vm's being scanned",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_dlpScanVMsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scanstatus",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Specify scan status of vm's to be retrieved (all|notstarted|started|completed)"
          },
          {
            "name": "pagesize",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Limit max number of entries returned. Valid range is 1-1024"
          },
          {
            "name": "startindex",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Specify starting point for retrieving logs"
          },
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Limit filter results by VC MOID of datacenter, cluster, or resource pool"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/completedscansummaries": {
      "get": {
        "description": "Retrieve scan summaries",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_dlpScanSummariesRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/scan/{scanID}/detailsascsv": {
      "get": {
        "description": "Retrieve ID, Name, Scan status, and Violation counts for VM's scanned during specified scan",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_dlpPreviousScanRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scanID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified scan ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/scan/{scanID}/policyasxml": {
      "get": {
        "description": "Retrieve XML representation of the policy used in the previous scan",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_dlpPolicyAsXML_",
        "produces": [
          "application/xml"
        ],
        "parameters": [
          {
            "name": "scanID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified previous scan"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/violations/{contextID}": {
      "get": {
        "description": "Get violation count for specific resource",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_dlpViolationRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contextID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified resource (moid of datacenter, cluster, folder, resource pool, or vm)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/violations": {
      "get": {
        "description": "Get violation count for entire inventory",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_dlpViolationsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/violatingfiles/{contextID}": {
      "get": {
        "description": "Get violating files for a resource",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_dlpViolatingFilesContext_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pagesize",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "number of results to view"
          },
          {
            "name": "startindex",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "page number from which the results will be displayed"
          },
          {
            "name": "contextID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified resource (moid of datacenter, cluster, folder, resource pool, or vm)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/violatingfiles": {
      "get": {
        "description": "Get violating files and the regulations each file violated",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_dlpViolatingFilesRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "pagesize",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "number of results to view"
          },
          {
            "name": "startindex",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "page number from which the results will be displayed"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/violatingfilesascsv/{contextID}": {
      "get": {
        "description": "Get violated regulations and violating files for the resource in CSV format",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_dlpViolatingFilesContextCSV_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contextID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified resource (moid of datacenter, cluster, folder, resource pool, or vm)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/dlp/violatingfilesascsv": {
      "get": {
        "description": "Display the violating files and the regulations each file violated in CSV format",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_dlpViolatingFilesCSV_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/eventcontrol/vm/{vmID}/request": {
      "post": {
        "description": "Enable or disable data collection on a virtual machine",
        "tags": [
          "1.0"
        ],
        "operationId": "Create_dataCollectionVMCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vmID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "MOID of the guest vm"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/eventcontrol/eventcontrol-root/request": {
      "post": {
        "description": "Turn on/off data collection at global level",
        "tags": [
          "1.0"
        ],
        "operationId": "Create_dataCollectionKillSwitch_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/eventcontrol/config/vm/{vmID}": {
      "get": {
        "description": "Retrieve per vm configuration for data collection",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_dataCollectionVMInfoRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vmID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "MOID of the guest vm"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/3.0/ai/records": {
      "get": {
        "description": "Get aggregated user activity",
        "tags": [
          "3.0"
        ],
        "operationId": "Get_userActivityRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Name of report (resource,adg,containers,sam,vma)"
          },
          {
            "name": "interval",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Relative time to current time (number followed by either m,h,d,s)"
          },
          {
            "name": "stime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Start time for query"
          },
          {
            "name": "etime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "End time for query"
          },
          {
            "name": "param",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Parameter to be applied to query (<param-name>:<param-type>:<comma-separated-values>:operator)"
          },
          {
            "name": "pagesize",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Number of records to retrieve (recommended between 100-2000)"
          },
          {
            "name": "startindex",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Start record number for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/3.0/ai/userdetails": {
      "get": {
        "description": "Retrieve user detail records in accordance with given query parameters",
        "tags": [
          "3.0"
        ],
        "operationId": "Get_userDetailsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "query",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Name of report (resource,adg,containers,sam,vma)"
          },
          {
            "name": "interval",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Relative time to current time (number followed by either m,h,d,s)"
          },
          {
            "name": "stime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Start time for query"
          },
          {
            "name": "etime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "End time for query"
          },
          {
            "name": "param",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Parameter to be applied to query (<param-name>:<param-type>:<comma-separated-values>:operator)"
          },
          {
            "name": "pagesize",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Number of records to retrieve (recommended between 100-2000)"
          },
          {
            "name": "startindex",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Start record number for pagination"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/3.0/ai/user/{userID}": {
      "get": {
        "description": "Retrieve details for a specific user",
        "tags": [
          "3.0"
        ],
        "operationId": "Get_specificUserDetailsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/3.0/ai/app/{appID}": {
      "get": {
        "description": "Retrieve details for specific app",
        "tags": [
          "3.0"
        ],
        "operationId": "Get_specificAppDetailsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "appID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified app ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/3.0/ai/app": {
      "get": {
        "description": "Retrieve app details",
        "tags": [
          "3.0"
        ],
        "operationId": "Get_appDetailsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/3.0/ai/host/{hostID}": {
      "get": {
        "description": "Get host details",
        "tags": [
          "3.0"
        ],
        "operationId": "Get_specificHostDetailsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified host ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/3.0/ai/host": {
      "get": {
        "description": "Retrieve list of all discovered hosts (both by agent introspection and LDAP Sync) and their detail",
        "tags": [
          "3.0"
        ],
        "operationId": "Get_hostDetailsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/3.0/ai/desktoppool/{desktoppoolID}": {
      "get": {
        "description": "Retrieve specific desktop pool details",
        "tags": [
          "3.0"
        ],
        "operationId": "Get_specificDesktopPoolRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "desktoppoolID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified desktop pool"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/3.0/ai/desktoppool": {
      "get": {
        "description": "Retrieve list of all discovered desktop pools by agent introspection",
        "tags": [
          "3.0"
        ],
        "operationId": "Get_desktopPoolRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/3.0/ai/vm/{vmID}": {
      "get": {
        "description": "Retrieve details about a specific virtual machine",
        "tags": [
          "3.0"
        ],
        "operationId": "Get_specificVMDetailsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vmID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "VM ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/3.0/ai/vm": {
      "get": {
        "description": "Retrieve list of all discovered vm's",
        "tags": [
          "3.0"
        ],
        "operationId": "Get_vmDetailsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/3.0/ai/directorygroup/{directorygroupID}": {
      "get": {
        "description": "Retrieve details about a specific directory group",
        "tags": [
          "3.0"
        ],
        "operationId": "Get_specificDirGroupRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "directorygroupID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified directory group"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/3.0/ai/directorygroup/user/{userID}": {
      "get": {
        "description": "Retrieve AD groups that user belongs to",
        "tags": [
          "3.0"
        ],
        "operationId": "Get_userDirGroupRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/3.0/ai/directorygroup": {
      "get": {
        "description": "Retrieve list of all discovered (and configured) LDAP directory groups",
        "tags": [
          "3.0"
        ],
        "operationId": "Get_dirGroupRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/3.0/ai/securitygroup/{secgroupID}": {
      "get": {
        "description": "Retrieve details about specific security group",
        "tags": [
          "3.0"
        ],
        "operationId": "Get_specificSecgroupDetailsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "secgroupID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified security group"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/3.0/ai/securitygroup": {
      "get": {
        "description": "Retrieve list of all observed security groups",
        "tags": [
          "3.0"
        ],
        "operationId": "Get_secgroupDetailsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/3.0/directory/updateDomain": {
      "post": {
        "description": "Register or update a domain with NSX Manager",
        "tags": [
          "3.0"
        ],
        "operationId": "Create_domainCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/directory/updateDomain": {
      "post": {
        "description": "Register or update a domain with NSX Manager",
        "tags": [
          "1.0"
        ],
        "operationId": "Create_domainCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/directory/listDomains": {
      "get": {
        "description": "Retrieve all agent discovered (or configured) LDAP domains",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_domainListRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/directory/deleteDomain/{ID}": {
      "delete": {
        "description": "Delete domain",
        "tags": [
          "1.0"
        ],
        "operationId": "Delete_domainDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Domain ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/directory/directory/updateLdapServer": {
      "post": {
        "description": "Create LDAP server",
        "tags": [
          "1.0"
        ],
        "operationId": "Create_ldapServerCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/directory/directory/listLdapServersForDomain/{domainID}": {
      "get": {
        "description": "Query LDAP servers for a domain",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_ldapServerDomainRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "domainID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified domain"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/directory/directory/fullSync/{domainID}": {
      "put": {
        "description": "Start LDAP full sync",
        "tags": [
          "1.0"
        ],
        "operationId": "Update_ldapServerSync_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "domainID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified domain"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/directory/directory/deltaSync/{domainID}": {
      "put": {
        "description": "Start LDAP delta sync",
        "tags": [
          "1.0"
        ],
        "operationId": "Update_ldapServerDeltaSync_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "domainID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified domain"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/directory/directory/deleteLdapServer/{serverID}": {
      "delete": {
        "description": "Delete LDAP server",
        "tags": [
          "1.0"
        ],
        "operationId": "Delete_ldapServerDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "serverID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified LDAP server"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/directory/directory/updateEventLogServer": {
      "post": {
        "description": "Create EventLog server",
        "tags": [
          "1.0"
        ],
        "operationId": "Create_eLogServerCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/directory/directory/listEventLogServersForDomain/{domainID}": {
      "get": {
        "description": "Query EventLog servers for a domain",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_eLogServerDomainRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "domainID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified domain"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/directory/directory/deleteEventLogServer/{serverID}": {
      "delete": {
        "description": "Delete EventLog server",
        "tags": [
          "1.0"
        ],
        "operationId": "Delete_eLogServerDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "serverID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified EventLog server ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/identity/userIpMapping": {
      "get": {
        "description": "Query user-to-ip mapping list from database",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_userIpMappingRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/identity/hostIpMapping": {
      "get": {
        "description": "Query host-to-ip mapping list from database",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_hostIpMappingRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/identity/ipToUserMapping": {
      "get": {
        "description": "Query set of users associated with a given set of Ip addresses",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_ipToUserMappingRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/identity/directoryGroupsForUser/{userID}": {
      "get": {
        "description": "Query set of Windows Domain Groups (AD Groups) to which the specified user belongs",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_userDirGroupsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/identity/staticUserMapping/{userID}/{IP}": {
      "post": {
        "description": "Create static user IP mapping",
        "tags": [
          "1.0"
        ],
        "operationId": "Create_staticUserMappingCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "User ID"
          },
          {
            "name": "IP",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "IP address"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/identity/staticUserMappings": {
      "get": {
        "description": "Query static user IP mapping list",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_staticUserMappingsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/identity/staticUserMappingsbyUser/{userID}": {
      "get": {
        "description": "Query static user IP mapping for specified user",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_staticUserMappingsbyUserRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete static user IP mapping for specified user",
        "tags": [
          "1.0"
        ],
        "operationId": "Delete_staticUserMappingsbyUserDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "User ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/identity/staticUserMappingsbyIP/{IP}": {
      "get": {
        "description": "Query static user IP mapping for specified IP",
        "tags": [
          "1.0"
        ],
        "operationId": "Get_staticUserMappingsbyIPRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "IP",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "IP address"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete static user IP mapping for specified IP",
        "tags": [
          "1.0"
        ],
        "operationId": "Delete_staticUserMappingsbyIPDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "IP",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "IP address"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/sam/syslog/enable": {
      "post": {
        "description": "Enable syslog support",
        "tags": [
          "1.0"
        ],
        "operationId": "Create_syslogEnable_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/1.0/sam/syslog/disable": {
      "post": {
        "description": "Disable syslog support",
        "tags": [
          "1.0"
        ],
        "operationId": "Create_syslogDisable_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/si/host/{hostID}/agents": {
      "get": {
        "description": "Retrieve all agents on the host",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_hostAgentsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified host"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/si/agent/{agentID}": {
      "get": {
        "description": "Retrieve agent details",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_agentInformationRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "agentID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified agent"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/si/deployment/{deploymentunitID}/agents": {
      "get": {
        "description": "Retrieve all agents for the specified deployment",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_deploymentAgentsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "deploymentunitID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified deployment"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/si/fabric/sync/conflicts": {
      "get": {
        "description": "Retrieve conflicting Deployment Units and EAM Agencies, if any, and the allowed operations on them",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_agentConflictsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Create deployment units for conflicting EAM Agencies, delete conflicting EAM agencies, or delete deployment units for conflicting EAM agencies",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_agentConflictsUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/macset/{scopeId}": {
      "get": {
        "description": "List MACsets created on a specified scope",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_macsetScopesRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Can be globalroot-0 or datacenterId in upgrade use cases"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Create a MACset on a specified scope",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_macsetScopesCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Can be globalroot-0 or datacenterId in upgrade use cases"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/macset/{macsetId}": {
      "get": {
        "description": "Retrieve details about a MACset",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_macsetRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "macsetId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified MACset ID (Can be retrieved by listing the MACset on a scope)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify an existing MACset",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_macsetUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "macsetId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified MACset ID (Can be retrieved by listing the MACset on a scope)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete a MACset",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_macsetDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "boolean",
            "description": "Indicates forced or unforced delete. With forced delete, the object is deleted even if used in other places such as firewall rules, causing invalid referrals. For unforced delete, the object is deleted only if it is no used by other configurations; otherwise the delete fails"
          },
          {
            "name": "macsetId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified MACset ID (Can be retrieved by listing the MACset on a scope)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/taskservice/job/{jobId}": {
      "get": {
        "description": "Retrieve all job instances for the specified job ID",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_taskFrameworkJobsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified job Id"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/taskservice/job": {
      "get": {
        "description": "Query job instances by criterion",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_taskFrameworkCriteria_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "integer",
            "format": "int64",
            "description": "Start index (0 by default)"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "integer",
            "format": "int64",
            "description": "Page size (10 by default)"
          },
          {
            "name": "sortBy",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Always sorted by \"startTime\""
          },
          {
            "name": "sortOrderAscending",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "boolean",
            "description": "Sort in ascending order of start time (true/false)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/endpointsecurity/registration/vendors": {
      "get": {
        "description": "Retrieve the list of all registered vendors",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_vShieldVendorsInfoRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/endpointsecurity/registration/{vendorID}/solutions": {
      "get": {
        "description": "Retrieve registration information for all registered solutions for a vendor",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_vShieldSolutionsInfoRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vendorID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "VMware-assigned ID for the vendor"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/endpointsecurity/registration/{vendorID}/{altitude}/location": {
      "post": {
        "description": "Set a solution's IP address and port on the vNIC host",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_solutionIPPortSet_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "altitude",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "VMware-assigned number to uniquely identify a solution. Describes the type of solution and the order in which the solution receives events relative to other solutions on the same host"
          },
          {
            "name": "vendorID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "VMware-assigned ID for the vendor"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Unset a solution's IP address and port",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_solutionIPPortDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "altitude",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "VMware-assigned number to uniquely identify a solution. Describes the type of solution and the order in which the solution receives events relative to other solutions on the same host"
          },
          {
            "name": "vendorID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "VMware-assigned ID for the vendor"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/endpointsecurity/registration/{vendorID}/{altitude}/{moid}": {
      "get": {
        "description": "Get the solution activation status",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_solutionActivationStatusRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "altitude",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "VMware-assigned number to uniquely identify a solution. Describes the type of solution and the order in which the solution receives events relative to other solutions on the same host"
          },
          {
            "name": "vendorID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "VMware-assigned ID for the vendor"
          },
          {
            "name": "moid",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "managed object reference"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/endpointsecurity/registration/{vendorID}/{altitude}": {
      "get": {
        "description": "Get registration information for a given solution",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_vShieldSolutionInfoRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "altitude",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "VMware-assigned number to uniquely identify a solution. Describes the type of solution and the order in which the solution receives events relative to other solutions on the same host"
          },
          {
            "name": "vendorID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "VMware-assigned ID for the vendor"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Unregister a solution",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_vShieldSolutionDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "altitude",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "VMware-assigned number to uniquely identify a solution. Describes the type of solution and the order in which the solution receives events relative to other solutions on the same host"
          },
          {
            "name": "vendorID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "VMware-assigned ID for the vendor"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/endpointsecurity/registration/{vendorID}": {
      "get": {
        "description": "Get vendor registration information",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_vShieldVendorInfoRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vendorID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "VMware-assigned ID for the vendor"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Register an antivirus solution",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_vShieldSolutionCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vendorID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "VMware-assigned ID for the vendor"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Unregister a vendor",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_vShieldVendorDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vendorID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "VMware-assigned ID for the vendor"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/endpointsecurity/registration": {
      "post": {
        "description": "Register a vendor",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_vShieldVendorCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/endpointsecurity/activation/{vendorID}/{solutionID}": {
      "get": {
        "description": "Get a list of activated security vm's for the specified solution",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_vShieldSolutionActivatedVMsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "solutionID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "solution ID"
          },
          {
            "name": "vendorID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "VMware-assigned ID for the vendor"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/endpointsecurity/activation/{vendorID}/{altitude}/{moid}": {
      "delete": {
        "description": "Deactivate a solution on a host",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_vShieldSolutionDeactivate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vendorID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "VMware-assigned ID for the vendor"
          },
          {
            "name": "altitude",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "VMware-assigned number to uniquely identify a solution. Describes the type of solution and the order in which the solution receives events relative to other solutions on the same host"
          },
          {
            "name": "moid",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Managed object reference of VM"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/endpointsecurity/activation/{vendorID}/{altitude}": {
      "post": {
        "description": "Activate a solution that has been registered and located",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_vShieldSolutionActivate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "vendorID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "VMware-assigned ID for the vendor"
          },
          {
            "name": "altitude",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "VMware-assigned number to uniquely identify a solution. Describes the type of solution and the order in which the solution receives events relative to other solutions on the same host"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/endpointsecurity/activation": {
      "get": {
        "description": "Retrieve activation information for all activated security vm's on the specified host",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_vShieldSolutionActivationRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "hostId",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified host ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/config/layer3sections/{sectionId}/rules/{ruleId}": {
      "get": {
        "description": "Read the configuration of a specific rule identified by rule Id",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_dfwL3RuleRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The ID of the rule beeing read, updated or deleted"
          },
          {
            "name": "sectionId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The ID of the section beeing added, updated or deleted"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Updates a L3 DFW Rule. To do this you need to read it first, make your changes, and then update the section by supplying the Etag value received in the read in the If-Match header",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_dfwL3RuleUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-match",
            "in": "header",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Needed value that you will receive  in the reponse of the read (GET) method in the Etag header"
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The ID of the rule beeing read, updated or deleted"
          },
          {
            "name": "sectionId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The ID of the section beeing added, updated or deleted"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete a specific rule identified by rule Id",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_dfwL3RuleDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-match",
            "in": "header",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Needed value that you will receive  in the reponse of the read (GET) method in the Etag header"
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The ID of the rule beeing read, updated or deleted"
          },
          {
            "name": "sectionId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The ID of the section beeing added, updated or deleted"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/config/layer3sections/{sectionId}/rules": {
      "post": {
        "description": "Add a L3 Rule",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_dfwL3RulesAdd_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-match",
            "in": "header",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Needed value that you will receive  in the reponse of the read (GET) method in the Etag header"
          },
          {
            "name": "sectionId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The ID of the section beeing added, updated or deleted"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/config/layer3sections/{sectionId}": {
      "get": {
        "description": "Read a specific section of the DFW config specified by Id",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_dfwL3SectionIdRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sectionId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The ID of the section beeing added, updated or deleted"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Updates a L3 DFW Section. To do this you need to read it first, make your changes, and then update the section by supplying the Etag value received in the read in the If-Match header",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_dfwL3SectionIdUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-match",
            "in": "header",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Needed value that you will receive  in the reponse of the read (GET) method in the Etag header"
          },
          {
            "name": "sectionId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The ID of the section beeing added, updated or deleted"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Deletes a L3 section and its content by ID",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_dfwL3SectionIdDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sectionId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The ID of the section beeing added, updated or deleted"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/config/layer3sections/{sectionName}": {
      "put": {
        "description": "Updates a L3 DFW Section. To do this you need to read it first, make your changes, and then update the section by supplying the Etag value received in the read in the If-Match header",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_dfwL3SectionNameUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-match",
            "in": "header",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Needed value that you will receive  in the reponse of the read (GET) method in the Etag header"
          },
          {
            "name": "sectionName",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/config/layer3sections": {
      "get": {
        "description": "Read a specific section of the DFW config specified by name",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_dfwL3SectionRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Name of the Section to read"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Creates a new L3 Firewall Section with a number of rules",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_dfwL3SectionCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/config/layer2sections/{sectionId}/rules/{ruleId}": {
      "get": {
        "description": "Read the configuration of a specific rule identified by rule Id",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_dfwL2RuleRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The ID of the rule beeing read, updated or deleted"
          },
          {
            "name": "sectionId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The ID of the section beeing added, updated or deleted"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Updates a L2 DFW Rule. To do this you need to read it first, make your changes, and then update the section by supplying the Etag value received in the read in the If-Match header",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_dfwL2RuleUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-match",
            "in": "header",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Needed value that you will receive  in the reponse of the read (GET) method in the Etag header"
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The ID of the rule beeing read, updated or deleted"
          },
          {
            "name": "sectionId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The ID of the section beeing added, updated or deleted"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete a specific rule identified by rule Id",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_dfwL2RuleDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-match",
            "in": "header",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Needed value that you will receive  in the reponse of the read (GET) method in the Etag header"
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The ID of the rule beeing read, updated or deleted"
          },
          {
            "name": "sectionId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The ID of the section beeing added, updated or deleted"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/config/layer2sections/{sectionId}/rules": {
      "post": {
        "description": "Add L2 Rule",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_dfwL2RulesAdd_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-match",
            "in": "header",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Needed value that you will receive  in the reponse of the read (GET) method in the Etag header"
          },
          {
            "name": "sectionId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The ID of the section beeing added, updated or deleted"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/config/layer2sections/{sectionId}": {
      "get": {
        "description": "Read a specific section of the DFW config specified by Id",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_dfwL2SectionIdRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sectionId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The ID of the section beeing added, updated or deleted"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Updates a L2 DFW Section. To do this you need to read it first, make your changes, and then update the section by supplying the Etag value received in the read in the If-Match header",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_dfwL2SectionIdUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-match",
            "in": "header",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Needed value that you will receive  in the reponse of the read (GET) method in the Etag header"
          },
          {
            "name": "sectionId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The ID of the section beeing added, updated or deleted"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Deletes a L2 section and its content by ID",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_dfwL2SectionIdDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sectionId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "The ID of the section beeing added, updated or deleted"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/config/layer2sections/{sectionName}": {
      "put": {
        "description": "Updates a L2 DFW Section. To do this you need to read it first, make your changes, and then update the section by supplying the Etag value received in the read in the If-Match header",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_dfwL2SectionNameUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "If-match",
            "in": "header",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Needed value that you will receive  in the reponse of the read (GET) method in the Etag header"
          },
          {
            "name": "sectionName",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/config/layer2sections": {
      "get": {
        "description": "Read a specific section of the DFW config specified by name",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_dfwL2SectionRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "name",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Name of the Section to read"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Creates a new L2 Firewall Section with a number of rules",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_dfwL2SectionCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/config/layer3redirectsections/{section}/rules/{ruleID}": {
      "get": {
        "description": "Get L3 redirect rule",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_ruleRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ruleID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified redirect rule"
          },
          {
            "name": "section",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specify section by ID or name"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify L3 redirect rule. You will need Etag value from the response header of GET call. Then, pass Etag value as the if-match header in PUT call",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_ruleUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "if-match",
            "in": "header",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Needed value that you will receive in the reponse of the read (GET) method in the Etag header"
          },
          {
            "name": "ruleID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified redirect rule"
          },
          {
            "name": "section",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specify section by ID or name"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete specified L3 redirect rule",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_ruleDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ruleID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified redirect rule"
          },
          {
            "name": "section",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specify section by ID or name"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/config/layer3redirectsections/{section}/rules": {
      "post": {
        "description": "Add L3 redirect rule",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_rulesCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "section",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specify section by ID or name"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/config/layer3redirectsections/{section}": {
      "get": {
        "description": "Get L3 redirect section configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_sectionRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "section",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specify section by ID or name"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify L3 Redirect section. You will need to get the Etag value out of the GET first. Then pass the modified version of the whole redirect section configuration in the GET body",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_sectionUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "if-match",
            "in": "header",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Needed value that you will receive in the reponse of the read (GET) method in the Etag header"
          },
          {
            "name": "section",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specify section by ID or name"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete specified L3 redirect section",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_sectionDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "section",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specify section by ID or name"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/config/layer3redirectsections": {
      "post": {
        "description": "Add L3 redirect section",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_layer3RedirectSectionsCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/config/layer3redirect/profiles": {
      "get": {
        "description": "Retrieve the Service Insertion profiles",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_serviceInsertionProfilesRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/config": {
      "get": {
        "description": "Global Distributed Firewall Rules configuration, use query Parameters to filter",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_dfwConfigShow_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ruleType",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "ruleType can be LAYER3, LAYER2, L3REDIRECT. Rule Type is mandatory if other search parameters are sent"
          },
          {
            "name": "source",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "source/destination can contain IPv4/v6 address or vm-id"
          },
          {
            "name": "ruleId",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "filter by ruleId"
          },
          {
            "name": "comment",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "comment can contain any portion of the comment entered for the rules. Search is case insensitive"
          },
          {
            "name": "name",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "name can contain any portion of the rulename entered for the rules. Search is case insensitive"
          },
          {
            "name": "siProfile",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "siProfile can contain any portion of the ServiceProfile name associated with L3redirectrule. Search is case insensitive."
          },
          {
            "name": "edgeId",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "edgeId is the EdgeID, that displays rules applicable to the specified Edge"
          },
          {
            "name": "action",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Filter for specific action (allow, deny)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "This will update the complete firewall configuration in all sections. You will need to get the Etag value out of the GET (dfwConfigShow) first. Then pass the modified version of the whole firewall configuration in the GET body",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_dfwConfigUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "if-match",
            "in": "header",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Needed value that you will receive  in the reponse of the read (GET) method in the Etag header"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Restores default configuration, which means one defaultLayer3 section with default allow rule and one defaultLayer2Section with default allow rule",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_dfwConfigDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/state": {
      "get": {
        "description": "Get current state of firewall functioning after NSX upgrade",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_dfwUpgradeRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Enable distributed firewall",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_dfwUpgradeEnable_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/status/layer3sections/{sectionID}": {
      "get": {
        "description": "Get Layer3 status",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_L3SectionStatusRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sectionID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Section ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/status/layer2sections/{sectionID}": {
      "get": {
        "description": "Get Layer2 status",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_L2SectionStatusRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "sectionID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Section ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/status": {
      "get": {
        "description": "Get firewall configuration status",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_dfwStatusRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/drafts/{draftID}/action/export": {
      "get": {
        "description": "Export a configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_dfwConfigExport_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "draftID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified draft ID (retrieved through dfwDrafts GET call)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/drafts/{draftID}/action/import": {
      "post": {
        "description": "Import a configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_dfwConfigImport_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "draftID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified draft ID (retrieved through dfwDrafts GET call)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/drafts/{draftID}": {
      "get": {
        "description": "Get a saved firewall configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_dfwDraftRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "draftID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified draft ID (retrieved through dfwDrafts GET call)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Update a saved firewall configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_dfwDraftUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "draftID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified draft ID (retrieved through dfwDrafts GET call)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete a configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_dfwDraftDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "draftID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified draft ID (retrieved through dfwDrafts GET call)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/globalroot-0/drafts": {
      "get": {
        "description": "Displays the draft IDs of all saved configurations",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_dfwSaveConfigRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Save a firewall configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_dfwDraftsCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/stats/eventthresholds": {
      "get": {
        "description": "Retrieve memory, CPU, and CPS thresholds for firewall",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_dfwThresholdsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure thresholds",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_dfwThresholdsUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/config/globalconfiguration": {
      "get": {
        "description": "Query RuleOptimize and TCPStrict flags",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_dfwPerformanceRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Set RuleOptimize and TCPStrict flags in body to improve performance",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_dfwPerformanceUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/forceSync/{ID}": {
      "post": {
        "description": "Force sync host/cluster",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_dfwSync_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified host or cluster to synchronize"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/{domainID}/enable/{truefalse}": {
      "post": {
        "description": "Enable or disable firewall components on a cluster",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_dfwEnableDisableAPI_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "truefalse",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Set parameter to true/false to enable/disable"
          },
          {
            "name": "domainID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified cluster"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/firewall/{contextId}/config/ipfix": {
      "get": {
        "description": "Query IPFix configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_dfwIPFixRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contextId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified context"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure IPFix",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_dfwIPFixUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contextId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified context"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Deleting IPFix configuration resets the config to default values",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_dfwIPFixDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contextId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified context"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/services/spoofguard/policies/{policyID}": {
      "get": {
        "description": "Retrieve policy information, or use the query parameters to perform operations",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_spoofGuardPolicyRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "list",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Use to retrieve IP addresses for specified state (ACTIVE|INACTIVE|PUBLISHED|UNPUBLISHED|REVIEW_PENDING|DUPLICATE)"
          },
          {
            "name": "policyID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify SpoofGuard policy",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_spoofGuardPolicyUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Use query parameters to perform operations on a policy",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_spoofGuardPolicyApprove_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "set to \"approve\" along with specified IP addresses in body to approve them, or set to \"publish\" to publish the approved IP addresses"
          },
          {
            "name": "policyID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete a policy",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_spoofGuardPolicyDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policyID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/services/spoofguard/policies": {
      "get": {
        "description": "Retrieve all SpoofGuard policies",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_spoofGuardPoliciesRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Create a SpoofGuard policy to specify the operation mode for networks.",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_spoofGuardPoliciesCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.1/flow/flowstats": {
      "get": {
        "description": "Retrieve flow statistics for a datacenter, port group, VM, or vNIC",
        "tags": [
          "2.1"
        ],
        "operationId": "Get_flowStatsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contextId",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "vc-moref-id of the datacenter, portgroup, vm, or UUID of the vNIC for which traffic flow is to be retrieved"
          },
          {
            "name": "flowType",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Type of flow to be retrieved (TCP_UDP|LAYER2|LAYER3)"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Flows with start time greater than specified time are retrieved"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Flows with start time lower than specified time are retrieved"
          },
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "integer",
            "format": "int64",
            "description": "(optional) Specifies starting point for retrieval. If not specified, start from the beginning by default"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "integer",
            "format": "int64",
            "description": "(optional) Limit the max number of entries returned. Valid range is 1-1024"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.1/internal/flow/flowsummary": {
      "get": {
        "description": "Retrieve flow summary",
        "tags": [
          "2.1"
        ],
        "operationId": "Get_flowSummaryRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contextId",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "vc-moref-id of datacenter, port group, vm, or uuid of vNIC for which flow is to be retrieved"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Flows with start time greater than specified will be fetched"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Flows with end time lesser than specified will be fetched"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.1/internal/flow/flowtable": {
      "get": {
        "description": "Retrieve flow table for given context and table type",
        "tags": [
          "2.1"
        ],
        "operationId": "Get_flowTableRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contextId",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "vc-moref-id of datacenter, port group, vm, or uuid of vNIC for which flow is to be retrieved"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Flows with start time greater than specified will be fetched"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Flows with end time lesser than specified will be fetched"
          },
          {
            "name": "tableType",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Type of flow to be fetched (source|application|destination)"
          },
          {
            "name": "maxRows",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "(optional) Max number of rows to return"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.1/internal/flow/flowdetails/application": {
      "get": {
        "description": "Retrieve flow details for given context by application",
        "tags": [
          "2.1"
        ],
        "operationId": "Get_flowDetailsAppRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contextId",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "vc-moref-id of datacenter, port group, vm, or uuid of vNIC for which flow is to be retrieved"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Flows with start time greater than specified will be fetched"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Flows with end time lesser than specified will be fetched"
          },
          {
            "name": "flowType",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Type of flow to be fetched (Allowed|Blocked)"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Service identifier of application to be queried"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.1/internal/flow/flowdetails": {
      "get": {
        "description": "Retrieve flow details for given context",
        "tags": [
          "2.1"
        ],
        "operationId": "Get_flowDetailsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contextId",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "vc-moref-id of datacenter, port group, vm, or uuid of vNIC for which flow is to be retrieved"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Flows with start time greater than specified will be fetched"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Flows with end time lesser than specified will be fetched"
          },
          {
            "name": "flowType",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Type of flow to be fetched (Allowed|Blocked)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.1/internal/flow/pagedflowdetails/application": {
      "get": {
        "description": "Retrieve paged flow details by application",
        "tags": [
          "2.1"
        ],
        "operationId": "Get_flowPagedDetailsAppRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contextId",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "vc-moref-id of datacenter, port group, vm, or uuid of vNIC for which flow is to be retrieved"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Flows with start time greater than specified will be fetched"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Flows with end time lesser than specified will be fetched"
          },
          {
            "name": "flowType",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Type of flow to be fetched (Allowed|Blocked)"
          },
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "(optional) Start index for returned flows"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "(optional) Max number of flows to return in a single call"
          },
          {
            "name": "serviceId",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Service identifier of application to query"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.1/internal/flow/pagedflowdetails": {
      "get": {
        "description": "Retrieves paged flow details for given context",
        "tags": [
          "2.1"
        ],
        "operationId": "Get_flowPagedDetailsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "contextId",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "vc-moref-id of datacenter, port group, vm, or uuid of vNIC for which flow is to be retrieved"
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Flows with start time greater than specified will be fetched"
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Flows with end time lesser than specified will be fetched"
          },
          {
            "name": "flowType",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Type of flow to be fetched (Allowed|Blocked)"
          },
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "(optional) Start index for returned flows"
          },
          {
            "name": "pageSize",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "(optional) Max number of flows to return in a single call"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.1/internal/flow/config": {
      "get": {
        "description": "Retrieve excluded flow details",
        "tags": [
          "2.1"
        ],
        "operationId": "Get_flowsExcludeRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Exclude specified flows",
        "tags": [
          "2.1"
        ],
        "operationId": "Create_flowsExcludeCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.1/app/excludelist/{memberID}": {
      "put": {
        "description": "Add a vm to the exclusion list",
        "tags": [
          "2.1"
        ],
        "operationId": "Update_dfwExclusionUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "memberID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "vc-moref-id of a virtual machine"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete a vm from exclusion list",
        "tags": [
          "2.1"
        ],
        "operationId": "Delete_dfwExclusionDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "memberID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "vc-moref-id of a virtual machine"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.1/app/excludelist": {
      "get": {
        "description": "Retrieve the set of vm's in the exclusion list",
        "tags": [
          "2.1"
        ],
        "operationId": "Get_dfwExclusionRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/dnsclient": {
      "put": {
        "description": "Update Edge DNS settings",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_nsxEdgeDnsUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/aesni": {
      "post": {
        "description": "Modify AESNI setting",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_aesniCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "enable",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "boolean"
          },
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/coredump": {
      "post": {
        "description": "Modify core dump setting",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_coreDumpCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/fips": {
      "post": {
        "description": "Modify FIPs setting",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_fipsCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "enable",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "boolean"
          },
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/logging": {
      "post": {
        "description": "Modify log setting",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_loggingCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "level",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/summary": {
      "get": {
        "description": "Retrieve details about the specified Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_summaryRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/status": {
      "get": {
        "description": "Retrieve the status of the specified Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_statusRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "getlatest",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "boolean",
            "description": "true = fetch the status live from NSX Edge, false = fetch the latest available status from database"
          },
          {
            "name": "detailed",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "boolean",
            "description": "true = fetch detailed status per feature, false = aggregated summary of status per feature"
          },
          {
            "name": "preRulesStatus",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "boolean",
            "description": "true = fetch detailed output for pre rules in addition to the regular output"
          },
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/techsupportlogs": {
      "get": {
        "description": "Retrieve the tech support logs for Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_techSupportLogsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/clisettings": {
      "put": {
        "description": "Modify CLI credentials and enable/disable SSH for Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_cliSettingsUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/cliremoteaccess": {
      "post": {
        "description": "Change CLI remote access",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_cliRemoteCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "enable",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "boolean"
          },
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/firewall/config/rules/{ruleId}": {
      "get": {
        "description": "Retrieve specific rule",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_firewallRuleRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Rule ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify a specific firewall rule",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_firewallRuleUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Rule ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete firewall rule",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_firewallRuleDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Rule ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/firewall/config/rules": {
      "post": {
        "description": "Add one or more rules. You can add a rule above a specific rule using the query parameter, indicating the desired ruleID.",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_firewallRulesCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "aboveRuleId",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "rule Id"
          },
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/firewall/config/global": {
      "get": {
        "description": "Retrieve the firewall default policy for an Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_globalFirewallConfigRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure firewall global config for an Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_globalFirewallConfigUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/firewall/config/defaultpolicy": {
      "get": {
        "description": "Retrieve default firewall policy",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_defaultFirewallPolicyRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure default firewall policy",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_defaultFirewallPolicyUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/firewall/config": {
      "get": {
        "description": "Read the firewall configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_nsxEdgeFirewallConfigRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure firewall for an Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_nsxEdgeFirewallConfigUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete firewall configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_nsxEdgeFirewallConfigDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/firewall/statistics/firewall": {
      "get": {
        "description": "Retrieve number of ongoing connections for the firewall config",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_firewallStatisticsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "interval",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "60 min by default, can be given as 1 -60 min, oneDay | oneWeek | oneMonth | oneYear"
          },
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/firewall/statistics/{ruleId}": {
      "get": {
        "description": "Retrieve stats for firewall rule",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_firewallRuleStatisticsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "ruleId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified rule"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/nat/config/rules/{ruleID}": {
      "put": {
        "description": "Modify a NAT rule",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_edgeNatRuleUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "ruleID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified rule ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete a NAT rule",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_edgeNatRuleUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "ruleID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified rule ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/nat/config/rules": {
      "post": {
        "description": "Add a NAT rule above a specific rule in the NAT rules table (using aboveRuleId) or append NAT rules to the bottom",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_edgeNatRulesCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "aboveRuleId",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Specified rule ID. If the ID does not exist, Edge Manager displays an error"
          },
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/nat/config": {
      "get": {
        "description": "Query SNAT and DNAT rules for an Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_edgeNatRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure SNAT and DNAT rules for an Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_edgeNatConfig_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete all NAT rules for an Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_edgeNatDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/routing/config/global": {
      "get": {
        "description": "Retrieve routing info from NSX Mgr database (default route settings, static route configurations)",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_routingGlobalConfigRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure global route",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_routingGlobalConfigUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/routing/config/static": {
      "get": {
        "description": "Read static and default routes",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_routingConfigStaticRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure static and default routes",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_routingConfigStaticUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete both static and default routing config stored in the NSX Mgr database",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_routingConfigStaticDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/routing/config/ospf": {
      "get": {
        "description": "Query OSPF config",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_routingOSPFRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure OSPF",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_routingOSPFUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete OSPF routing",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_routingOSPFDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/routing/config/isis": {
      "get": {
        "description": "Query ISIS",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_routingISISRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Config ISIS",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_routingISISUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete ISIS routing",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_routingISISDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/routing/config/bgp": {
      "get": {
        "description": "Query BGP",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_routingBGPRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure BGP",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_routingBGPUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete BGP Routing",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_routingBGPDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/routing/config": {
      "get": {
        "description": "Retrieve routes",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_routingConfigRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure globalConfig, staticRouting, OSPG, BGP, and IS-IS",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_routingConfigUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete the routing config stored in the NSX Mgr database and the default routes from the specified NSX Edge appliance",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_routingConfigDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/bridging/config": {
      "get": {
        "description": "Retrieve bridge configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_bridgingRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure a bridge",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_bridingUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete bridges",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_bridgingDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/loadbalancer/config/applicationprofiles/{appProfileID}": {
      "get": {
        "description": "Retrieve an application profile",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_applicationProfileRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "appProfileID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified application profile"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify an application profile",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_applicationProfileUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "appProfileID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified application profile"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete an application profile",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_applicationProfileDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "appProfileID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified application profile"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/loadbalancer/config/applicationprofiles": {
      "get": {
        "description": "Retrieve all application profiles on Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_applicationProfilesRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Add an application profile",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_applicationProfilesCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete all application profiles",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_applicationProfilesDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/loadbalancer/config/applicationrules/{appruleID}": {
      "get": {
        "description": "Retrieve an application rule",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_appRuleRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "appruleID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified application rule"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify an app rule",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_appRuleUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "appruleID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified application rule"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete an application rule",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_appRuleDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "appruleID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified application rule"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/loadbalancer/config/applicationrules": {
      "get": {
        "description": "Read all application rules",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_appRulesRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Add an application rule",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_appRulesCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete all application rules",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_appRulesDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/loadbalancer/config/monitors/{monitorID}": {
      "get": {
        "description": "Retrieve a load balancer monitor",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_lbMonitorRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "monitorID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified monitor"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify a load balancer monitor",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_lbMonitorUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "monitorID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified monitor"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete a load balancer monitor",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_lbMonitorDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "monitorID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified monitor"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/loadbalancer/config/monitors": {
      "get": {
        "description": "Retrieve all load balancer monitors",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_lbMonitorsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Add a load balancer monitor",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_lbMonitorsCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete all load balancer monitors",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_lbMonitorsDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/loadbalancer/config/virtualservers/{virtualserverID}": {
      "get": {
        "description": "Retrieve virtual server details",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_virtualServerRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "virtualserverID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified virtual server ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete a virtual server",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_virtualServerDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "virtualserverID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified virtual server ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/loadbalancer/config/virtualservers": {
      "get": {
        "description": "Retrieve all virtual servers",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_virtualServersRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Add a virtual server",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_virtualServersCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete all",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_virtualServersDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/loadbalancer/config/pools/{poolID}": {
      "get": {
        "description": "Get backend pool details",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_poolRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "poolID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified pool ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify the specified pool",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_poolUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "poolID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified pool ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete backend pool",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_poolDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "poolID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified pool ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/loadbalancer/config/pools": {
      "get": {
        "description": "Get all backend pools for the specified NSX Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_poolsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Add a load balancer server pool to the Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_poolsCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete all backend pools configured on the specified NSX Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_poolsDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/loadbalancer/config/members/{memberID}": {
      "post": {
        "description": "Update member condition",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_lbMemberCond_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "enable",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "boolean",
            "description": "Enable or disable member condition"
          },
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "memberID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Member ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/loadbalancer/config": {
      "get": {
        "description": "Get current load balancer config",
        "tags": [
          "4.0"
        ],
        "operationId": "loadBalancerRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure load balancer",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_loadBalancerConfig_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete load balancer configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_loadBalancerDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/loadbalancer/statistics": {
      "get": {
        "description": "Retrieve load balancer statistics",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_lbStatisticsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/loadbalancer/acceleration": {
      "post": {
        "tags": [
          "4.0"
        ],
        "operationId": "Create_40EdgesLoadbalancerAccelerationByEdgeId_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "enable",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "boolean",
            "description": "Enable or disable load balancer acceleration mode"
          },
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/dns/config": {
      "get": {
        "description": "Retrieve DNS configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_edgeDnsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure DNS servers",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_edgeDnsUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete DNS configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_edgeDdnsDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/dns/statistics": {
      "get": {
        "description": "Get DNS server statistics",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_edgeDnsStats_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/dhcp/config/ippools/{poolID}": {
      "delete": {
        "description": "Delete a pool specified by pool ID",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_dhcpPoolIDDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "poolID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified DHCP IP pool"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/dhcp/config/ippools": {
      "post": {
        "description": "Add an IP pool to the DHCP configuration. returns a pool ID within a Location HTTP header",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_dhcpPoolCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/dhcp/config/bindings/{bindingID}": {
      "delete": {
        "description": "Delete the static-binding by ID",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_dhcpStaticBindingIDDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "bindingID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified static-binding ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/dhcp/config/bindings": {
      "post": {
        "description": "Append a static-binding to DHCP config. A static-binding ID is returned within a Location HTTP header",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_dhcpStaticBindingCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/dhcp/config/relay": {
      "get": {
        "description": "Query DHCP relay",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_dhcpRelayRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure DHCP relay",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_dhcpRelayUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete DHCP relay configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_dhcpRelayDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/dhcp/config": {
      "get": {
        "description": "Get DHCP configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_dhcpRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure DHCP service",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_dhcpUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete the DHCP configuration, restoring it to factory default",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_dhcpDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/dhcp/leaseInfo": {
      "get": {
        "description": "Get DHCP lease information",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_dhcpLeaseRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/highavailability/config": {
      "get": {
        "description": "Get high availability configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_highAvailabilityRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure high availability",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_highAvailabilityCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete high availability configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_highAvailabilityDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/syslog/config": {
      "get": {
        "description": "Query syslog servers",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_syslogRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure syslog servers",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_syslogUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete syslog servers",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_syslogDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/config/server": {
      "get": {
        "description": "Get server settings",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_serverSettingsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Apply server settings",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_serverSettingsUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/config/client/networkextension/privatenetworks/{networkID}": {
      "get": {
        "description": "Get the specified private network in the SSL VPN service",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_privateNetworkRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "networkID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified private network"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify specified private network in the SSL VPN service",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_privateNetworkUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "networkID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified private network"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete private network",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_privateNetworkDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "networkID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified private network"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/config/client/networkextension/privatenetworks": {
      "get": {
        "description": "Get all private network profiles in the SSL VPN instance",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_privateNetworksRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Update all private network configs of NSX Edge with the given list of private network configs. If the config is present, it is updated; otherwise, a new private network config is created. Existing configs not included in the call body are deleted",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_privateNetworksUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Add a private network",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_privateNetworksCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete all Private Networks from the SSL VPN instance",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_privateNetworksDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/config/client/networkextension/ippools/{ippoolID}": {
      "get": {
        "description": "Get details of specified IP pool",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_netExtipPoolRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "ippoolID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified IP pool ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify specified IP pool",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_netExtipPoolUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "ippoolID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified IP pool ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete the specified IP pool",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_netExtipPoolDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "ippoolID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified IP pool ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/config/client/networkextension/ippools": {
      "get": {
        "description": "Get all IP pools configured on SSL VPN",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_netExtipPoolsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Update all IP pools with the given list of pools. If the pool is present, it is updated; otherwise, a new pool is created. Existing pools not in the body are deleted",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_netExtipPoolsUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Create an IP pool",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_netExtipPoolsCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete all IP pools configured on SSL VPN",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_netExtipPoolsDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/config/client/networkextension/clientconfig": {
      "get": {
        "description": "Get client configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_clientConfigRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Set parameters for full access client configurations",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_clientConfigUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/config/client/networkextension/installpackages/{packageID}": {
      "get": {
        "description": "Get information about the specified installation package",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_installPackageRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "packageID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified installation package ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify the specified installation package",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_installPackageUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "packageID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified installation package ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete the specified installation package",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_installPackageDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "packageID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified installation package ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/config/client/networkextension/installpackages": {
      "get": {
        "description": "Get information about all installation packages",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_installPackagesRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Update all installation packages with the given list. If the package is present, it is updated; otherwise a new installation package is created. Existing packages not included in the body are deleted.",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_installPackagesUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Create installers for full access network clients. These setup binaries are downloaded by remote clients and installed on their systems.",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_installPackagesCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete all client installation packages",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_installPackagesDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/config/layout/images": {
      "put": {
        "description": "Set the portal layout",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_layoutUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/config/layout": {
      "get": {
        "description": "Query layout configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_layoutRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/config/webresources/{id}": {
      "get": {
        "description": "Get the specified web access server",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_webResourceRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "ID of specified web access server"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify the specified web access server",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_webResourceUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "ID of specified web access server"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete the specified web access server",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_webResourceDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "id",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "ID of specified web access server"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/config/webresources": {
      "get": {
        "description": "Get all web resources on the SSL VPN instance",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_webResourcesRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Add portal web resource",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_webResourcesCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete all web resources on the SSL VPN instance",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_webResourcesDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/config/auth/localserver/users/{userID}": {
      "get": {
        "description": "Get information about a specified user",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_userRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete specified user",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_userDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "userID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/config/auth/localserver/users": {
      "put": {
        "description": "Modify the specified portal user",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_usersUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Add a new portal user",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_usersCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete all users on the specifed SSL VPN instance",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_usersDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/config/auth/settings/rsaconfigfile": {
      "post": {
        "description": "Upload RSA config file (See \"Generate the Authentication Manager Configuration File\" section of the RSA Authentication Manager Administrator's guide for instructions on how to configure and download the RSA config file from RSA Authentication Manager)",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_rsaConfigCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/config/auth/settings": {
      "get": {
        "description": "Get information about authentication server",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_authSettingsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Set authentication process for remote users. Specify username/password authentication, active directory, ldap, radius, client certificate based authentication",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_authSettingsUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/config/advancedconfig": {
      "get": {
        "description": "Retrieve SSL VPN advanced configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_advancedConfigRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Apply advanced configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_advancedConfigUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/config/script/{fileID}": {
      "get": {
        "description": "Retrieve parameters associated with the specified script file",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_scriptFileIDRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "fileID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified script file"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify script parameters",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_scriptFileIDUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "fileID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified script file"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete script parameters",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_scriptFileIDDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "fileID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified script file"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/config/script/file": {
      "post": {
        "description": "Upload a login/logoff script. Returns a script file ID to configure the parameters",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_scriptFileCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/config/script": {
      "get": {
        "description": "Retrieve all script configurations for the Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_scriptRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Update all script configurations with the given list of configurations. If the config is present, its is updated; otherwise, a new config is created. Existing configs not included in the body are deleted",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_scriptUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Configure parameters associated with the uploaded script file",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_scriptCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete all script configurations",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_scriptDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/config": {
      "get": {
        "description": "Retrieve SSL VPN details",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_sslVPNRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Reconfigure the entire SSL VPN",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_sslVPNUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Enable or disable SSL VPN",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_sslVPNCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "enableService",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "boolean",
            "description": "Set to true to enable, false to disable"
          },
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete the SSL VPN configurations on the Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_sslVPNDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/auth/localusers/users": {
      "put": {
        "description": "Update all users with the given list of users. If the user is present, it is updated. Otherwise, and new user is created. Existing users not included in the body are deleted.",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_allUsersUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/activesessions/{sessionID}": {
      "delete": {
        "description": "Disconnect an active client",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_sessionDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "sessionID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified client session"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/sslvpn/activesessions": {
      "get": {
        "description": "Retrieve a list of active clients for the SSL VPN session",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_sslVPNActiveClientsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/statistics/dashboard/sslvpn": {
      "get": {
        "description": "Retrieve SSL VPN statistics on the specified NSX Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_sslVPNStatsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "interval",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Specify a range; can be 1 - 60 minutes, or oneDay|oneWeek|oneMonth|oneYear. Default is 60 minutes"
          },
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/statistics/dashboard/ipsec": {
      "get": {
        "description": "Retrieve tunnel traffic statistics for specified time interval. Default is 1 hour. Other possible values are 1-60 minutes|oneDay|oneWeek|oneMonth|oneYear",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_ipsecTrafficStatsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/statistics/dashboard/interface": {
      "get": {
        "description": "Retrieve dashboard statistics between the specified start and end times.",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_vnicDashStatsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "interval",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specify a start and end time range in seconds"
          },
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/statistics/interfaces/uplink": {
      "get": {
        "description": "Get uplink interface statistics",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_uplinkVNICStatsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/statistics/interfaces/internal": {
      "get": {
        "description": "Get internal interface statistics",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_internalVNICStatsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/statistics/interfaces": {
      "get": {
        "description": "Get interface statistics",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_vnicStatsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/l2vpn/config/statistics": {
      "get": {
        "description": "Retrieve L2 VPN stats, which has information such as tunnel status, sent bytes, received bytes etc. for the given Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_statisticsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/l2vpn/config": {
      "get": {
        "description": "Retrieve the current L2VPN configuration for NSX Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_l2VPNRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure L2VPN for server or client",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_l2VPNUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Enable or disable L2 VPN service according to the value of the query parameter \"enableService\"",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_l2VPNCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "enableService",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "boolean",
            "description": "Enable or disable L2 VPN"
          },
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete L2 VPN",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_l2VPNDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/ipsec/config": {
      "get": {
        "description": "Retrieve IPSec configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_ipsecConfigRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure IPSEC VPN",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_ipsecConfigUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete the IPSec configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_ipsecConfigDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/ipsec/statistics": {
      "get": {
        "description": "Retrieve IPSec statistics",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_ipsecStatsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/autoconfiguration": {
      "get": {
        "description": "Retrieve auto config settings for the Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_autoConfigRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Change the auto configuration settings for the NSX Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_autoConfigUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/appliances/{haIndex}": {
      "get": {
        "description": "Get configuration of specified appliance",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_applianceRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "haIndex",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified appliance HA index"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify the configuration of the specified appliance",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_applianceUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "haIndex",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified appliance HA index"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete the appliance",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_applianceDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "haIndex",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified appliance HA index"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/appliances": {
      "get": {
        "description": "Retrieve appliance configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_appliancesRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify appliance configuration (tip -- retrieve the config using GET call, then modify the parameters and send as body)",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_appliancesUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Change the size of both appliances",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_appliancesCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "size",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "set to compact|large|xlarge"
          },
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/vnics/{index}": {
      "get": {
        "description": "Retrieve interface",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_vnicRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified interface"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Modify the specified interface",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_vnicUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified interface"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete interface",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_vnicDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified interface"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/vnics": {
      "get": {
        "description": "Retrieve all interfaces for Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_vnicsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Add an interface or sub interface",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_vnicsCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "always set to \"patch\""
          },
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/mgmtinterface": {
      "get": {
        "description": "Retrieve all managedment interfaces to the NSX Edge router",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_mgmtInterfaceRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Configure management interfaces for NSX Edge router",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_mgmtInterfaceUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/interfaces/{index}": {
      "get": {
        "description": "Retrieve information on specified Edge router interface",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_interfaceRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified router interface"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete interface configuration and reset to factory default",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_interfaceDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          },
          {
            "name": "index",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified router interface"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}/interfaces": {
      "get": {
        "description": "Retrieve all interfaces for Edge router",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_interfacesRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Add interfaces for NSX Edge router. Can have up to 8 uplink interfaces",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_interfacesCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Always set to 'patch'"
          },
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete interfaces",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_interfacesDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "index",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Specify index of interface to delete (e.g. ?index=<index1>&index=<index2>). If no indices specified, all interfaces are deleted"
          },
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/{edgeId}": {
      "get": {
        "description": "Retrieve Edge details",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_nsxEdgeRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Update the NSX Edge configuration",
        "tags": [
          "4.0"
        ],
        "operationId": "Update_nsxEdgeUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Manage NSX Edge",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_nsxEdgeCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Options include \"forcesync\" (resync Edge vm's), \"redeploy\" ()"
          },
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete specified Edge from database. Associated appliances are also deleted",
        "tags": [
          "4.0"
        ],
        "operationId": "Delete_nsxEdgeDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "edgeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/jobs/{jobId}": {
      "get": {
        "description": "Retrieve job status (SUCCESS/FAILED/QUEUED/RUNNING/ROLLBACK), URI of the resource, and ID of the resource as shown in response body",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_nsxEdgeJobRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "jobId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Job ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges/jobs": {
      "get": {
        "description": "Query jobs. Assumes Edge is configured in async mode, where ?async=true is used at the end of any 4.0 service configuration URI for POST, PUT, and DELETE calls.",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_nsxEdgeJobsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "status",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "status set to \"all\" or \"active\""
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/4.0/edges": {
      "get": {
        "description": "Retrieve a list of NSX Edges in your inventory or use the query parameters to filter results by datacenter or port group",
        "tags": [
          "4.0"
        ],
        "operationId": "Get_nsxEdgesRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "datacenter",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Retrieve Edges by datacenter MoId"
          },
          {
            "name": "tenant",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Retrieve Edges on specified tenant (by tenant ID)"
          },
          {
            "name": "pg",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Retrieve Edges with one interface on specified port group (by port group MoId)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Install NSX Edge services gateway or logical router, depending on request body",
        "tags": [
          "4.0"
        ],
        "operationId": "Create_nsxEdgesCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/3.0/edges/{edgeID}": {
      "post": {
        "description": "Upgrade NSX Edge",
        "tags": [
          "3.0"
        ],
        "operationId": "Create_nsxEdgeUpgrade_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "action",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Set this to 'upgrade'"
          },
          {
            "name": "edgeID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified Edge"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/truststore/certificate/scope/{scopeId}": {
      "get": {
        "description": "Query all certificates for a scope",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_certificateScopeRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Scope ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/truststore/certificate/{scopeId}": {
      "post": {
        "description": "Create a single certificate",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_certificateSelfSignedCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Scope ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/truststore/certificate/{certificateId}": {
      "get": {
        "description": "Retrieve the certificate object specified by ID. If the ID specifies a chain, multiple certificate objects are retrieved.",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_certificateRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "certificateId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "certificate ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete the specified certificate",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_certificateDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "certificateId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "certificate ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/truststore/certificate": {
      "post": {
        "description": "Create certificate for CSR",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_certificateCSRCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/truststore/csr/{scopeId}": {
      "post": {
        "description": "Create a CSR",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_csrCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified scope ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/truststore/csr/{csrId}": {
      "get": {
        "description": "Retrieve specific CSR",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_csrSelfSignedRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "csrId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "CSR ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Create a self signed certificate for CSR",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_csrSelfSignedUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "noOfDays",
            "in": "query",
            "required": true,
            "x-is-map": false,
            "type": "string"
          },
          {
            "name": "csrId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "CSR ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/truststore/csr/scope/{scopeId}": {
      "get": {
        "description": "Query CSRs for specific scope",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_csrScopeRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified scope"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/truststore/crl/{scopeId}": {
      "post": {
        "description": "Create CRL on the specified scope",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_crlScopeCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified scope"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/truststore/crl/scope/{scopeId}": {
      "get": {
        "description": "Retrieve all certificates for the specified scope",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_crlScopeRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "scopeId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified scope"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/truststore/crl/{crlId}": {
      "get": {
        "description": "Retrieve certificate object for specified crlID",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_crlIDRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "crlId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "CRL ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete the specified CRL",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_crlIDDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "crlId",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "CRL ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/policy/securitypolicy/{ID}/securityactions": {
      "get": {
        "description": "Retrieve security actions for a security policy",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_securityActionsRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "ID of desired security policy (or 'all' to include all security policies for the securityPolicyID read method)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/policy/securitypolicy/{ID}": {
      "get": {
        "description": "Retrieve security policy information",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_securityPolicyIDRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "ID of desired security policy (or 'all' to include all security policies for the securityPolicyID read method)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "put": {
        "description": "Edit a security policy",
        "tags": [
          "2.0"
        ],
        "operationId": "Update_securityPolicyIDUpdate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "ID of desired security policy (or 'all' to include all security policies for the securityPolicyID read method)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "delete": {
        "description": "Delete a security policy",
        "tags": [
          "2.0"
        ],
        "operationId": "Delete_securityPolicyIDDelete_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "force",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "boolean",
            "description": "If set to true, security policy is deleted even if it is being used somewhere"
          },
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "ID of desired security policy (or 'all' to include all security policies for the securityPolicyID read method)"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/policy/securitypolicy/hierarchy": {
      "get": {
        "description": "Export a Service Composer configuration and save to your desktop for use as a backup",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_hierarchyRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "policyIds",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Comma separated security policy id's"
          },
          {
            "name": "prefix",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "(optional) Some prefix to add before the names of the objects in the exported XML"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      },
      "post": {
        "description": "Import a security policy configuration",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_hierarchyCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "suffix",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "(optional) Added after names"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/policy/securitypolicy": {
      "post": {
        "description": "Create a security policy",
        "tags": [
          "2.0"
        ],
        "operationId": "Create_securityPolicyCreate_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/policy/securityaction/category/virtualmachines": {
      "get": {
        "description": "Fetch all vm objects on which security action of a given category and attribute has been applied",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_securityActionVMRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "attributeKey",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Attribute name"
          },
          {
            "name": "attributeValue",
            "in": "query",
            "required": false,
            "x-is-map": false,
            "type": "string",
            "description": "Attribute value"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/policy/securitygroup/{ID}/securityactions": {
      "get": {
        "description": "Query all security actions applicable on a security group",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_securityActionRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified security group"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/policy/virtualmachine/{ID}/securityactions": {
      "get": {
        "description": "Fetch the security actions applicable on a virtual machine",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_vmApplicableSecurityAction_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "VM ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/policy/policy/serviceprovider/firewall": {
      "get": {
        "description": "Query the time since when Service Composer firewall is out of sync with dfw, or synchronize Service Composer firewall with dfw",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_serviceComposerDFWSyncRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    },
    "/2.0/services/policy/policy/securitygroup/{ID}/securitypolicies": {
      "get": {
        "description": "Retrieve security policies mapped to a security group",
        "tags": [
          "2.0"
        ],
        "operationId": "Get_secGroupPoliciesRead_",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "ID",
            "in": "path",
            "required": true,
            "x-is-map": false,
            "type": "string",
            "description": "Specified security group ID"
          }
        ],
        "responses": {
          "200": {
            "description": ""
          }
        }
      }
    }
  }
}
